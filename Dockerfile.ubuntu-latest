ARG   VERSION=latest
FROM  ubuntu:$VERSION

USER  root
SHELL ["bash","-c"]
ARG   VERSION
RUN   echo -e 'Version': ubuntu:$VERSION'\n''Build date: '$(date) > /etc/image_version

# Apt

ENV   DEBIAN_FRONTEND noninteractive
ENV   apt_user_packages='colordiff fish git neovim vim sudo ccache' \
      apt_userrequ_packages='libssl-dev lib32ncurses5'
      apt_requ_packages='openjdk-8-jdk bison build-essential curl flex gcc-multilib git-core g++-multilib gnupg gperf lib32z-dev libc6-dev-i386 libgl1-mesa-dev libx11-dev libxml2-utils unzip x11proto-core-dev xsltproc zip zlib1g-dev' \
      apt_addi_packages='bc jq lib32readline-dev lib32z1-dev lib32z-dev libc6-dev libc6-dev-i386 libgl1-mesa-dev lib32ncurses-dev libsdl1.2-dev libwxgtk3.0-gtk3-0v5 libx11-dev libxml2 lzop maven ncftp openjdk-8-jre p7zip-full pngcrush python-pip-whl screen squashfs-tools tmux unzip w3m x11proto-core-dev zstd' \
      apt_xenial_packages='libesd0-dev'
      
RUN   echo 'deb http://archive.ubuntu.com/ubuntu/ xenial main restricted universe' >> /etc/apt/sources.list F&\
      sed -i.bak -r 's!(deb|deb-src) \S+!\1 mirror+http://mirrors.ubuntu.com/mirrors.txt!' /etc/apt/sources.list &&\
      yes|apt update -qq &&\
      yes|apt full-upgrade -qq &&\
      yes|apt install -qq           $(echo "${apt_user_packages} ${apt_requ_packages} ${apt_addi_packages} ${apt_userrequ_packages}"|tr ' ' ' ') &&\
      yes|apt install -qq -t xenial $(echo "${apt_xenial_packages}"|tr ' ' ' ') &&\
      yes|apt clean -qq &&\
      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* &&\
      mkdir -p /opt/bin||true &&\
      ln -s /usr/bin/python3 /opt/bin/python &&\
      curl mirrors.ubuntu.com/mirrors.txt
      
SHELL ["/usr/bin/fish","-c"]

# Bin

RUN   mkdir -p /opt/bin||true &&\
      curl https://storage.googleapis.com/git-repo-downloads/repo > /opt/bin/repo &&\
      chmod a+rx /opt/bin/repo
      
# User

RUN   useradd anbuilder -md /android-build &&\
      echo    'anbuilder ALL=NOPASSWD: ALL' >> /etc/sudoers &&\
      echo    'anbuilder:tin' > /android-build/password-info &&\
      chpasswd < /android-build/password-info &&\
      echo -e \n'The root user password has not been set yet'\n'Use "sudo" command to set it' >> /android-build/password-info &&\
      echo -e \n'Set disable_coredump false' >> /etc/sudo.conf
      
# Login

USER    anbuilder
WORKDIR /android-build
## Copy document
ADD    --chown=anbuilder:anbuilder document /android-build/
## Copy dot files
ADD    --chown=anbuilder:anbuilder script/  /android-build/
RUN     mkdir /android-build/tunnel/
VOLUME  ["/android-build/tunnel/"]
CMD     ["fish","--login"]
